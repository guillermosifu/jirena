# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models


class AuthGroup(models.Model):
    name = models.CharField(unique=True, max_length=150)

    class Meta:
        managed = False
        db_table = 'auth_group'


class AuthGroupPermissions(models.Model):
    id = models.BigAutoField(primary_key=True)
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)
    permission = models.ForeignKey('AuthPermission', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_group_permissions'
        unique_together = (('group', 'permission'),)


class AuthPermission(models.Model):
    name = models.CharField(max_length=255)
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING)
    codename = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'auth_permission'
        unique_together = (('content_type', 'codename'),)


class AuthUser(models.Model):
    password = models.CharField(max_length=128)
    last_login = models.DateTimeField(blank=True, null=True)
    is_superuser = models.IntegerField()
    username = models.CharField(unique=True, max_length=150)
    first_name = models.CharField(max_length=150)
    last_name = models.CharField(max_length=150)
    email = models.CharField(max_length=254)
    is_staff = models.IntegerField()
    is_active = models.IntegerField()
    date_joined = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'auth_user'


class AuthUserGroups(models.Model):
    id = models.BigAutoField(primary_key=True)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_groups'
        unique_together = (('user', 'group'),)


class AuthUserUserPermissions(models.Model):
    id = models.BigAutoField(primary_key=True)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    permission = models.ForeignKey(AuthPermission, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_user_permissions'
        unique_together = (('user', 'permission'),)


class Autorizaciones(models.Model):
    idauto = models.IntegerField(primary_key=True)
    diaauto = models.DateField()
    fechahora = models.DateTimeField()
    viajeauto = models.CharField(max_length=255, db_collation='latin1_swedish_ci')
    galnuevo = models.CharField(max_length=255, db_collation='latin1_swedish_ci')
    estado = models.IntegerField()
    placa = models.CharField(max_length=20)
    equipo = models.CharField(max_length=20)
    obs = models.CharField(max_length=500)
    fecha_eli = models.DateField()
    aplicacion = models.CharField(max_length=10)
    galactual = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'autorizaciones'


class Ciudades(models.Model):
    nombre = models.CharField(max_length=11)

    class Meta:
        managed = False
        db_table = 'ciudades'


class Clientes(models.Model):
    nombre = models.CharField(max_length=200)
    ruc = models.CharField(max_length=11)
    estado = models.IntegerField()
    rfuser_cre = models.IntegerField()
    date_added = models.DateField()
    val = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'clientes'


class Conductores(models.Model):
    licencia = models.CharField(max_length=30)
    nombre = models.CharField(max_length=100)
    estado = models.IntegerField()
    rfuser_cre = models.IntegerField()
    date_added = models.DateField()
    dni = models.CharField(max_length=15)

    class Meta:
        managed = False
        db_table = 'conductores'


class Departamentos(models.Model):
    nombre = models.CharField(max_length=50)
    estado = models.IntegerField()
    fecha = models.DateField()

    class Meta:
        managed = False
        db_table = 'departamentos'


class Direcciones(models.Model):
    direccion = models.CharField(max_length=500)
    ref = models.CharField(max_length=300)
    rfcliente = models.IntegerField()
    estado = models.IntegerField()
    fecha = models.DateField()
    coordenadas = models.CharField(max_length=300)
    zona = models.CharField(max_length=50)
    rfuser_cre = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'direcciones'


class Distritos(models.Model):
    nombre = models.CharField(max_length=100)
    estado = models.IntegerField()
    fecha = models.DateField()
    rf_prov = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'distritos'


class DjangoAdminLog(models.Model):
    action_time = models.DateTimeField()
    object_id = models.TextField(blank=True, null=True)
    object_repr = models.CharField(max_length=200)
    action_flag = models.PositiveSmallIntegerField()
    change_message = models.TextField()
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING, blank=True, null=True)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'django_admin_log'


class DjangoContentType(models.Model):
    app_label = models.CharField(max_length=100)
    model = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'django_content_type'
        unique_together = (('app_label', 'model'),)


class DjangoMigrations(models.Model):
    id = models.BigAutoField(primary_key=True)
    app = models.CharField(max_length=255)
    name = models.CharField(max_length=255)
    applied = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_migrations'


class DjangoSession(models.Model):
    session_key = models.CharField(primary_key=True, max_length=40)
    session_data = models.TextField()
    expire_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_session'


class Encuestas(models.Model):
    id_encuesta = models.AutoField(primary_key=True)
    id_usuario = models.IntegerField()
    titulo = models.CharField(max_length=150)
    descripcion = models.TextField()
    estado = models.IntegerField()
    fecha_inicio = models.DateTimeField()
    fecha_final = models.DateTimeField()
    puntaje_max = models.FloatField()
    puntaje_min = models.FloatField()
    rfestado = models.IntegerField()
    archivo = models.CharField(max_length=300)
    rftipo_encuesta = models.IntegerField()
    fecha_creacion = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'encuestas'


class Estadoguia(models.Model):
    nombre = models.CharField(max_length=20)
    abrev = models.CharField(max_length=2)

    class Meta:
        managed = False
        db_table = 'estadoguia'


class Estados(models.Model):
    nombre = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'estados'


class FallasMecanicas(models.Model):
    fecha_deteccion = models.DateTimeField()
    descripcion = models.CharField(max_length=500)
    placa = models.CharField(max_length=7)
    ape_nombres = models.CharField(max_length=50)
    fecha_creacion = models.DateTimeField()
    estado = models.CharField(max_length=1)
    rfestado = models.IntegerField()
    file1 = models.CharField(max_length=300)
    file2 = models.CharField(max_length=300)
    file3 = models.CharField(max_length=300)
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()

    class Meta:
        managed = False
        db_table = 'fallas_mecanicas'


class Goldcar(models.Model):
    groups = models.CharField(max_length=200)
    date_group = models.DateField()
    avl = models.CharField(max_length=50)
    timestamp = models.DateTimeField()
    latitude = models.CharField(max_length=50)
    longitude = models.CharField(max_length=50)
    speed = models.IntegerField()
    ignition = models.IntegerField()
    move = models.IntegerField()
    cb_speed = models.IntegerField()
    cb_aceleration = models.IntegerField()
    cb_tfu = models.CharField(max_length=20)
    cb_fg = models.CharField(max_length=20)
    cb_rpm = models.IntegerField()
    cb_distance = models.IntegerField()
    cb_fp = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'goldcar'


class Grifos(models.Model):
    codigo = models.IntegerField()
    estacion = models.CharField(max_length=100)
    rfprov = models.IntegerField()
    direccion = models.CharField(max_length=500)
    urb = models.CharField(max_length=30)
    distrito = models.CharField(max_length=300)
    provincia = models.CharField(max_length=100)
    dpto = models.CharField(max_length=100)
    sistema = models.CharField(max_length=50)
    glp = models.CharField(db_column='GLP', max_length=1)  # Field name made lowercase.
    gnv = models.CharField(db_column='GNV', max_length=1)  # Field name made lowercase.
    g98 = models.CharField(db_column='G98', max_length=1)  # Field name made lowercase.
    g97 = models.CharField(db_column='G97', max_length=1)  # Field name made lowercase.
    g95 = models.CharField(db_column='G95', max_length=1)  # Field name made lowercase.
    g90 = models.CharField(db_column='G90', max_length=1)  # Field name made lowercase.
    g84 = models.CharField(db_column='G84', max_length=1)  # Field name made lowercase.
    d2 = models.CharField(db_column='D2', max_length=1)  # Field name made lowercase.
    estado = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fechareg = models.DateField()
    tienda = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'grifos'


class GrifosProv(models.Model):
    id = models.IntegerField(primary_key=True)
    nombre = models.CharField(max_length=100)
    estado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'grifos_prov'


class Guiarem(models.Model):
    serie = models.CharField(max_length=10)
    numero = models.CharField(max_length=20)
    idtramo = models.IntegerField()
    fecha = models.DateField()
    estado = models.CharField(max_length=1)
    rfuser_creacion = models.IntegerField()
    fecha_creacion = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_elim = models.IntegerField()
    fecha_elim = models.DateField()
    rfserie_trans = models.CharField(max_length=15)
    rfnum_trans = models.CharField(max_length=15)
    manif = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'guiarem'


class Guiatrans(models.Model):
    serie = models.CharField(max_length=4, db_collation='utf8_spanish_ci')
    numero = models.CharField(max_length=8, db_collation='utf8_spanish_ci')
    idtramo = models.ForeignKey('Tramos', models.DO_NOTHING, db_column='idtramo')
    conductor = models.ForeignKey(Conductores, models.DO_NOTHING, db_column='conductor')
    copiloto = models.CharField(max_length=80, db_collation='utf8_spanish_ci')
    observacion = models.CharField(max_length=300, db_collation='utf8_spanish_ci')
    fecha = models.DateField()
    estado = models.CharField(max_length=1, db_collation='utf8_spanish_ci')
    rfestguia = models.IntegerField()
    rfestguia_ult = models.ForeignKey(Estadoguia, models.DO_NOTHING, db_column='rfestguia_ult')
    rfuser_creacion = models.ForeignKey('Usuarios', models.DO_NOTHING, db_column='rfuser_creacion')
    fecha_creacion = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_elim = models.IntegerField()
    fecha_elim = models.DateField()
    rfuser_est = models.IntegerField()
    fecha_est = models.DateField()
    manif = models.CharField(max_length=20, db_collation='utf8_spanish_ci')
    tipodoc = models.IntegerField()
    guia = models.CharField(max_length=15, db_collation='utf8_spanish_ci')
    hora_reg = models.TimeField()
    hora_mod = models.TimeField()
    hora_eli = models.TimeField()
    hora_est = models.TimeField()
    conformidad = models.IntegerField()
    fecha_confor = models.DateField()
    cotizacion = models.IntegerField()
    cod_facturar = models.IntegerField()
    fecha_facturar = models.DateField()
    f_rec_merca = models.DateField()
    f_conf_merca = models.DateField()
    f_ent_com = models.DateField()
    rfuser_confor = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'guiatrans'


class Hallazgos(models.Model):
    fecha_deteccion = models.DateTimeField()
    descripcion = models.CharField(max_length=500)
    sugerencia = models.CharField(max_length=500)
    dni = models.IntegerField()
    fecha_creacion = models.DateTimeField()
    estado = models.CharField(max_length=1)
    rfestado = models.IntegerField()
    file1 = models.CharField(max_length=300)
    file2 = models.CharField(max_length=300)
    file3 = models.CharField(max_length=300)
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()

    class Meta:
        managed = False
        db_table = 'hallazgos'


class HistEstGuia(models.Model):
    rfguia_trans = models.IntegerField()
    serie = models.CharField(max_length=3)
    numero = models.CharField(max_length=7)
    rfest_guia = models.IntegerField()
    fecha = models.DateField()
    rfuser = models.IntegerField()
    estado = models.CharField(max_length=1, db_collation='latin1_swedish_ci')
    fechahora = models.DateTimeField()
    hora = models.TimeField()

    class Meta:
        managed = False
        db_table = 'hist_est_guia'


class Localidad(models.Model):
    nombre = models.CharField(max_length=20)
    estado = models.IntegerField()
    date_added = models.DateField()

    class Meta:
        managed = False
        db_table = 'localidad'


class Manifiestos(models.Model):
    nombre = models.IntegerField()
    curso = models.CharField(max_length=20, db_collation='utf8_spanish_ci')
    estado = models.CharField(max_length=2, db_collation='utf8_spanish_ci')
    rfuser_creacion = models.ForeignKey('Usuarios', models.DO_NOTHING, db_column='rfuser_creacion')
    fecha_creacion = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_elim = models.IntegerField()
    fecha_elim = models.DateField()
    obs = models.CharField(max_length=500)
    serie = models.CharField(max_length=3)
    numero = models.IntegerField()
    hora_creacion = models.TimeField()
    rfcliente = models.IntegerField()
    rfdir1 = models.IntegerField()
    rfdir2 = models.IntegerField()
    letra = models.CharField(max_length=2)

    class Meta:
        managed = False
        db_table = 'manifiestos'


class ManifiestosArequipa(models.Model):
    serie = models.CharField(max_length=3)

    class Meta:
        managed = False
        db_table = 'manifiestos_arequipa'


class ManifiestosLima(models.Model):
    serie = models.CharField(max_length=3)

    class Meta:
        managed = False
        db_table = 'manifiestos_lima'


class Opciones(models.Model):
    id_opcion = models.AutoField(primary_key=True)
    id_pregunta = models.IntegerField()
    valor = models.CharField(max_length=300)
    rpta = models.FloatField()

    class Meta:
        managed = False
        db_table = 'opciones'


class Pesos(models.Model):
    id = models.IntegerField(primary_key=True)
    descripcion = models.CharField(max_length=50)
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    estado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'pesos'


class Preguntas(models.Model):
    id_pregunta = models.AutoField(primary_key=True)
    id_encuesta = models.IntegerField()
    titulo = models.CharField(max_length=500)
    id_tipo_pregunta = models.IntegerField()
    puntaje = models.FloatField()

    class Meta:
        managed = False
        db_table = 'preguntas'


class Provincias(models.Model):
    nombre = models.CharField(max_length=100)
    estado = models.IntegerField()
    fecha = models.DateField()
    rf_dpto = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'provincias'


class Resultados(models.Model):
    id_resultado = models.AutoField(primary_key=True)
    id_encuesta = models.IntegerField()
    id_pregunta = models.IntegerField()
    id_opcion = models.CharField(max_length=300)
    id_usuario = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'resultados'


class Rutaf(models.Model):
    origen = models.CharField(max_length=500)
    destino = models.CharField(max_length=500)
    distancia = models.IntegerField()
    fecha = models.DateField()
    estado = models.IntegerField()
    rfcliente = models.IntegerField()
    ref1 = models.CharField(max_length=300)
    ref2 = models.CharField(max_length=300)

    class Meta:
        managed = False
        db_table = 'rutaf'


class Rutas(models.Model):
    origen = models.CharField(max_length=200, db_collation='utf8_spanish_ci')
    destino = models.CharField(max_length=200, db_collation='utf8_spanish_ci')
    distancia = models.FloatField()
    fecha = models.DateField()
    estado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'rutas'


class TSopComputadoras(models.Model):
    ubicacion = models.CharField(max_length=30, blank=True, null=True)
    tipo = models.CharField(max_length=30, blank=True, null=True)
    usuario = models.CharField(max_length=100, blank=True, null=True)
    area = models.CharField(max_length=30, blank=True, null=True)
    hostname_desc = models.CharField(max_length=100, blank=True, null=True)
    marca = models.CharField(max_length=20, blank=True, null=True)
    modelo = models.CharField(max_length=30, blank=True, null=True)
    serial = models.CharField(max_length=100, blank=True, null=True)
    procesador = models.CharField(max_length=100, blank=True, null=True)
    memoria = models.CharField(max_length=50, blank=True, null=True)
    disco_duro = models.CharField(max_length=50, blank=True, null=True)
    clave_admin = models.CharField(max_length=30, blank=True, null=True)
    any_desk = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 't_sop_computadoras'


class TTkCategoria(models.Model):
    nombre = models.CharField(max_length=200, blank=True, null=True)
    tipo_id = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 't_tk_categoria'


class TTkEstado(models.Model):
    nombre = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 't_tk_estado'


class TTkHistory(models.Model):
    code = models.CharField(max_length=50, blank=True, null=True)
    date_at = models.DateField(blank=True, null=True)
    description = models.CharField(max_length=500, blank=True, null=True)
    status = models.ForeignKey(TTkEstado, models.DO_NOTHING, blank=True, null=True)
    created_at = models.DateTimeField(blank=True, null=True)
    user = models.ForeignKey('TTkUsuario', models.DO_NOTHING, blank=True, null=True)
    asigned = models.ForeignKey('TTkUsuario', models.DO_NOTHING, blank=True, null=True)
    ticket = models.ForeignKey('TTkTicket', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 't_tk_history'


class TTkNotificacion(models.Model):
    descripcion = models.TextField(blank=True, null=True)
    fechacreacion = models.DateTimeField(db_column='fechaCreacion', blank=True, null=True)  # Field name made lowercase.
    autor = models.ForeignKey('TTkUsuario', models.DO_NOTHING, blank=True, null=True)
    receptor = models.ForeignKey('TTkUsuario', models.DO_NOTHING, blank=True, null=True)
    ticket = models.ForeignKey('TTkTicket', models.DO_NOTHING)
    estado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 't_tk_notificacion'


class TTkPrioridad(models.Model):
    nombre = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 't_tk_prioridad'


class TTkProyecto(models.Model):
    nombre = models.CharField(max_length=200, blank=True, null=True)
    descripcion = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 't_tk_proyecto'


class TTkRespuesta(models.Model):
    descripcion = models.TextField(blank=True, null=True)
    file = models.CharField(max_length=255, blank=True, null=True)
    fechacreacion = models.DateTimeField(db_column='fechaCreacion', blank=True, null=True)  # Field name made lowercase.
    user = models.ForeignKey('TTkUsuario', models.DO_NOTHING, blank=True, null=True)
    person_id = models.IntegerField(blank=True, null=True)
    estado = models.ForeignKey(TTkEstado, models.DO_NOTHING, blank=True, null=True)
    ticket = models.ForeignKey('TTkTicket', models.DO_NOTHING)
    tipo = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 't_tk_respuesta'


class TTkTicket(models.Model):
    codigo = models.CharField(max_length=255, blank=True, null=True)
    titulo = models.CharField(max_length=200, blank=True, null=True)
    descripcion = models.TextField(blank=True, null=True)
    file = models.CharField(max_length=255, blank=True, null=True)
    file2 = models.CharField(max_length=255, blank=True, null=True)
    fechamodificacion = models.DateTimeField(db_column='fechaModificacion', blank=True, null=True)  # Field name made lowercase.
    fechacreacion = models.DateTimeField(db_column='fechaCreacion', blank=True, null=True)  # Field name made lowercase.
    tipo = models.ForeignKey('TTkTipo', models.DO_NOTHING)
    subtipo_id = models.IntegerField(db_column='subTipo_id', blank=True, null=True)  # Field name made lowercase.
    user = models.ForeignKey('TTkUsuario', models.DO_NOTHING, blank=True, null=True)
    person = models.ForeignKey('Usuarios', models.DO_NOTHING, blank=True, null=True)
    asigned = models.ForeignKey('TTkUsuario', models.DO_NOTHING, blank=True, null=True)
    proyecto = models.ForeignKey(TTkProyecto, models.DO_NOTHING, blank=True, null=True)
    categoria = models.ForeignKey(TTkCategoria, models.DO_NOTHING, blank=True, null=True)
    prioridad = models.ForeignKey(TTkPrioridad, models.DO_NOTHING)
    estado = models.ForeignKey(TTkEstado, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 't_tk_ticket'


class TTkTipo(models.Model):
    nombre = models.CharField(max_length=100, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 't_tk_tipo'


class TTkUsuario(models.Model):
    username = models.CharField(max_length=50, blank=True, null=True)
    password = models.CharField(max_length=60, blank=True, null=True)
    nombre = models.CharField(max_length=50, blank=True, null=True)
    apellido = models.CharField(max_length=50, blank=True, null=True)
    email = models.CharField(max_length=255, blank=True, null=True)
    activo = models.IntegerField()
    tipo = models.IntegerField()
    fechacreacion = models.DateTimeField(db_column='fechaCreacion', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 't_tk_usuario'


class Tagricola(models.Model):
    rfserv = models.IntegerField()
    equipo = models.CharField(max_length=200)
    modelo = models.CharField(max_length=200)
    descripcion = models.CharField(max_length=200)
    serie_nro_motor = models.CharField(max_length=100)
    peso_tn = models.CharField(max_length=10)
    largo_m = models.CharField(max_length=10)
    ancho_m = models.CharField(max_length=10)
    alto_m = models.CharField(max_length=10)
    m3 = models.CharField(max_length=10)
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tagricola'


class Tcombustible1(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible1'


class Tcombustible10(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible10'


class Tcombustible11(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible11'


class Tcombustible12(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible12'


class Tcombustible13(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible13'


class Tcombustible14(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible14'


class Tcombustible2(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible2'


class Tcombustible3(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible3'


class Tcombustible4(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible4'


class Tcombustible5(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible5'


class Tcombustible6(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible6'


class Tcombustible7(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible7'


class Tcombustible8(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible8'


class Tcombustible9(models.Model):
    rfcliente = models.IntegerField()
    origen = models.CharField(max_length=30)
    destino = models.CharField(max_length=30)
    pre_conf = models.CharField(max_length=20)
    configuracion = models.CharField(max_length=20)
    post_conf = models.CharField(max_length=20)
    rfpeso = models.IntegerField()
    gal_ini = models.IntegerField()
    gal_pre = models.IntegerField()
    gal_sig = models.IntegerField()
    gal_efe = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcombustible9'


class Tcomponentes(models.Model):
    rfserv = models.IntegerField()
    equipo = models.CharField(max_length=200)
    modelo = models.CharField(max_length=200)
    descripcion = models.CharField(max_length=200)
    serie_nro_motor = models.CharField(max_length=100)
    peso_tn = models.CharField(max_length=10)
    largo_m = models.CharField(max_length=10)
    ancho_m = models.CharField(max_length=10)
    alto_m = models.CharField(max_length=10)
    m3 = models.CharField(max_length=10)
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tcomponentes'


class Tfargoline(models.Model):
    rfserv = models.IntegerField()
    equipo = models.CharField(max_length=200)
    modelo = models.CharField(max_length=200)
    descripcion = models.CharField(max_length=200)
    serie_nro_motor = models.CharField(max_length=100)
    peso_tn = models.CharField(max_length=10)
    largo_m = models.CharField(max_length=10)
    ancho_m = models.CharField(max_length=10)
    alto_m = models.CharField(max_length=10)
    m3 = models.CharField(max_length=10)
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tfargoline'


class TimgSeg(models.Model):
    manifiesto = models.CharField(max_length=20)
    tramo = models.IntegerField()
    fecha_cre = models.DateField()
    img_obs = models.CharField(max_length=300)
    img_obsjir = models.CharField(max_length=300)
    img_obscli = models.CharField(max_length=300)

    class Meta:
        managed = False
        db_table = 'timg_seg'


class TipoEncuesta(models.Model):
    id_tipo_encuesta = models.AutoField(primary_key=True)
    descripcion = models.CharField(max_length=50)
    rfuser_creacion = models.IntegerField()
    fecha_creacion = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tipo_encuesta'


class TipoOperacion(models.Model):
    tipo = models.CharField(max_length=100)
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tipo_operacion'


class TipoPregunta(models.Model):
    id_tipo_pregunta = models.AutoField(primary_key=True)
    nombre = models.CharField(max_length=50)
    descripcion = models.TextField()
    rfestado = models.IntegerField()
    nombre_real = models.CharField(max_length=50)

    class Meta:
        managed = False
        db_table = 'tipo_pregunta'


class TipoRpta(models.Model):
    id_tipo_rpta = models.AutoField(primary_key=True)
    descripcion = models.CharField(max_length=50, db_collation='utf8_unicode_ci')

    class Meta:
        managed = False
        db_table = 'tipo_rpta'


class TipoUsuario(models.Model):
    id_tipo_usuario = models.AutoField(primary_key=True)
    nombre = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'tipo_usuario'


class Tipodocguia(models.Model):
    numero = models.IntegerField()
    estado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tipodocguia'


class Tmaquina(models.Model):
    nombre = models.CharField(max_length=100)
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tmaquina'


class Tmaquinaria(models.Model):
    rfserv = models.IntegerField()
    equipo = models.CharField(max_length=200)
    modelo = models.CharField(max_length=200)
    estibaje = models.CharField(max_length=200)
    peso_tn = models.CharField(max_length=10)
    largo_m = models.CharField(max_length=10)
    ancho_m = models.CharField(max_length=10)
    alto_m = models.CharField(max_length=10)
    m3 = models.CharField(max_length=10)
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tmaquinaria'


class TmpManifiestos(models.Model):
    descripcion = models.CharField(max_length=100)
    rfmanif = models.CharField(max_length=20)
    rftramo = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'tmp_manifiestos'


class Toperadorm(models.Model):
    nombres = models.CharField(max_length=50)
    apellidopat = models.CharField(max_length=50)
    apellidomat = models.CharField(max_length=50)
    rfuser_cre = models.IntegerField()
    fecha_ingreso = models.DateField()
    fecha_cese = models.DateField()
    sede = models.CharField(max_length=20, db_collation='utf32_spanish_ci')
    operador = models.IntegerField()
    ayudante = models.IntegerField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'toperadorm'


class Tprogramado(models.Model):
    rfserv = models.IntegerField()
    equipo = models.CharField(max_length=200)
    modelo = models.CharField(max_length=200)
    descripcion = models.CharField(max_length=200)
    serie_nro_motor = models.CharField(max_length=100)
    peso_tn = models.CharField(max_length=10)
    largo_m = models.CharField(max_length=10)
    ancho_m = models.CharField(max_length=10)
    alto_m = models.CharField(max_length=10)
    m3 = models.CharField(max_length=10)
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tprogramado'


class TrackingAdjuntos(models.Model):
    id = models.BigAutoField(primary_key=True)
    url = models.CharField(max_length=255, blank=True, null=True)
    tracking = models.ForeignKey('TrackingRegistros', models.DO_NOTHING)
    fecha_registro = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'tracking_adjuntos'


class TrackingCampos(models.Model):
    id = models.BigAutoField(primary_key=True)
    nombre = models.CharField(max_length=255, blank=True, null=True)
    campo = models.CharField(max_length=255, blank=True, null=True)
    tipo = models.CharField(max_length=255, blank=True, null=True)
    cliente_id = models.BigIntegerField()

    class Meta:
        managed = False
        db_table = 'tracking_campos'


class TrackingCliente(models.Model):
    id = models.BigAutoField(primary_key=True)
    cliente_id = models.BigIntegerField()
    usuario_id = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tracking_cliente'


class TrackingDestinatarios(models.Model):
    id = models.BigAutoField(primary_key=True)
    ruc = models.CharField(max_length=255, blank=True, null=True)
    nombre = models.CharField(max_length=255)
    direccion = models.TextField(blank=True, null=True)
    cliente_id = models.BigIntegerField()
    coordenadas = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tracking_destinatarios'


class TrackingEstados(models.Model):
    id = models.BigAutoField(primary_key=True)
    descripcion = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tracking_estados'


class TrackingManifiesto(models.Model):
    id = models.BigAutoField(primary_key=True)
    guia_remision_serie = models.CharField(max_length=255, blank=True, null=True)
    guia_remision_nro = models.BigIntegerField(blank=True, null=True)
    guia_transportista_serie = models.CharField(max_length=255, blank=True, null=True)
    guia_transportista_nro = models.BigIntegerField(blank=True, null=True)
    delivery = models.CharField(max_length=255, blank=True, null=True)
    sales_order = models.CharField(max_length=255, blank=True, null=True)
    orden_compra = models.CharField(max_length=255, blank=True, null=True)
    unidad_minera = models.CharField(max_length=255, blank=True, null=True)
    punto_origen = models.CharField(max_length=255, blank=True, null=True)
    punto_destino = models.CharField(max_length=255, blank=True, null=True)
    peso_total = models.CharField(max_length=255, blank=True, null=True)
    nro_bultos = models.CharField(max_length=255, blank=True, null=True)
    fecha_recepcion = models.DateField(blank=True, null=True)
    fecha_inicio_traslado = models.DateField(blank=True, null=True)
    fecha_entrega_programada = models.DateField(blank=True, null=True)
    fecha_entrega_real = models.DateField(blank=True, null=True)
    descripcion_carga = models.TextField(blank=True, null=True)
    manifiesto_nro = models.CharField(max_length=255, blank=True, null=True)
    comentarios = models.TextField(blank=True, null=True)
    destinatario_id = models.BigIntegerField()
    estado_id = models.BigIntegerField()
    manifiesto_id = models.BigIntegerField()

    class Meta:
        managed = False
        db_table = 'tracking_manifiesto'


class TrackingRegistros(models.Model):
    id = models.BigAutoField(primary_key=True)
    glosa1 = models.CharField(max_length=255, blank=True, null=True)
    glosa2 = models.CharField(max_length=255, blank=True, null=True)
    glosa3 = models.CharField(max_length=255, blank=True, null=True)
    glosa5 = models.CharField(max_length=255, blank=True, null=True)
    glosa6 = models.CharField(max_length=255, blank=True, null=True)
    glosa7 = models.CharField(max_length=255, blank=True, null=True)
    glosa8 = models.CharField(max_length=255, blank=True, null=True)
    glosa9 = models.CharField(max_length=255, blank=True, null=True)
    glosa10 = models.CharField(max_length=255, blank=True, null=True)
    glosa4 = models.CharField(max_length=255, blank=True, null=True)
    destinatario_id = models.BigIntegerField()
    estado_id = models.BigIntegerField()
    tramo_id = models.BigIntegerField()

    class Meta:
        managed = False
        db_table = 'tracking_registros'


class Tramos(models.Model):
    nombre = models.CharField(max_length=50)
    apellido = models.CharField(max_length=255)
    cliente = models.ForeignKey(Clientes, models.DO_NOTHING, db_column='cliente')
    descrip = models.CharField(max_length=255)
    fechan = models.DateField()
    bultos = models.CharField(max_length=20)
    curso = models.ForeignKey(Manifiestos, models.DO_NOTHING, db_column='curso')
    estado = models.CharField(max_length=2)
    rfconductor = models.IntegerField()
    peso = models.IntegerField()
    despach = models.ForeignKey('Usuarios', models.DO_NOTHING, db_column='despach')
    galactual = models.IntegerField()
    galnuevo = models.IntegerField()
    viaje = models.IntegerField()
    manif = models.CharField(max_length=20)
    ntramo = models.IntegerField()
    rfuser_creacion = models.IntegerField()
    fecha_creacion = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_elim = models.IntegerField()
    fecha_elim = models.DateField()
    placa_camion = models.CharField(max_length=10)
    placa_remolcador = models.CharField(max_length=10)
    placa_remolque = models.CharField(max_length=10)
    placa_camioneta = models.CharField(max_length=15)
    rfgrifo = models.ForeignKey(Grifos, models.DO_NOTHING, db_column='rfgrifo')
    rfruta = models.IntegerField()
    recorrido = models.IntegerField()
    kmactual = models.IntegerField()
    idauto = models.IntegerField()
    horasal = models.TimeField()
    fechalleg = models.DateField()
    horalleg = models.TimeField()
    rfrutaf = models.IntegerField()
    rfdir1 = models.ForeignKey(Direcciones, models.DO_NOTHING, db_column='rfdir1')
    rfdir2 = models.ForeignKey(Direcciones, models.DO_NOTHING, db_column='rfdir2')
    fechasal_r = models.DateField()
    horasal_r = models.TimeField()
    fechalleg_r = models.DateField()
    horalleg_r = models.TimeField()
    img_ori = models.CharField(max_length=300)
    img_dur = models.CharField(max_length=300)
    img_des = models.CharField(max_length=300)
    hoja_ruta = models.CharField(max_length=300)
    cod_eval_ssoma = models.CharField(max_length=20)
    rfconductor2 = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tramos'


class TramosDet(models.Model):
    rfcab_tramo = models.IntegerField()
    pcamion = models.CharField(max_length=10)
    premolcador = models.CharField(max_length=10)
    premolque = models.CharField(max_length=10)
    pcamioneta = models.CharField(max_length=10)
    rfconductor = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tramos_det'


class TrutasKm(models.Model):
    rfdir1 = models.IntegerField()
    rfdir2 = models.IntegerField()
    distancia = models.DecimalField(max_digits=8, decimal_places=2)
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_mod = models.IntegerField()
    fecha_mod = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'trutas_km'


class Tseguimiento(models.Model):
    manifiesto = models.CharField(max_length=12)
    tramo = models.IntegerField()
    fecha_cre = models.DateField()
    hora_cre = models.TimeField()
    rfuser_cre = models.IntegerField()
    obs = models.CharField(max_length=300)
    motivo_eli = models.CharField(max_length=300)
    fechaid = models.DateField()
    horaid = models.TimeField()
    fechafd = models.DateField()
    horafd = models.TimeField()
    fechaia = models.DateField()
    horaia = models.TimeField()
    fechafa = models.DateField()
    horafa = models.TimeField()
    fechaic = models.DateField()
    horaic = models.TimeField()
    fechafc = models.DateField()
    horafc = models.TimeField()
    fechainij = models.DateField()
    horainij = models.TimeField()
    fechafinj = models.DateField()
    horafinj = models.TimeField()
    obs_impjir = models.CharField(max_length=300)
    fechainic = models.DateField()
    horainic = models.TimeField()
    fechafinc = models.DateField()
    horafinc = models.TimeField()
    obs_impcli = models.CharField(max_length=300)
    rfestado = models.IntegerField()
    fec_ingalm = models.DateField()
    hor_ingalm = models.TimeField()
    fec_salalm = models.DateField()
    hor_salalm = models.TimeField()
    fec_inicar = models.DateField()
    hor_inicar = models.TimeField()
    fec_fincar = models.DateField()
    hor_fincar = models.TimeField()
    fec_inides = models.DateField()
    hor_inides = models.TimeField()
    fec_findes = models.DateField()
    hor_findes = models.TimeField()
    fec_llegmin = models.DateField()
    hor_llegmin = models.TimeField()
    fec_salmin = models.DateField()
    hor_salmin = models.TimeField()

    class Meta:
        managed = False
        db_table = 'tseguimiento'


class Tservicios(models.Model):
    nombre = models.CharField(max_length=200)
    rfcliente = models.IntegerField()
    rfestado = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'tservicios'


class TtrabajosmCab(models.Model):
    serie = models.CharField(max_length=3)
    numero = models.IntegerField()
    rfmaquina = models.IntegerField()
    rfoperadorm = models.IntegerField()
    rfayudantem = models.IntegerField()
    fecha_operacion = models.DateField()
    horai_prog = models.TimeField()
    horaf_prog = models.TimeField()
    horai_real = models.TimeField()
    horaf_real = models.TimeField()
    rfestado = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()

    class Meta:
        managed = False
        db_table = 'ttrabajosm_cab'


class TtrabajosmDet(models.Model):
    rfcab = models.IntegerField()
    unidad = models.IntegerField()
    viaje = models.IntegerField()
    rfmanifiesto = models.CharField(max_length=20)
    rftramo = models.IntegerField()
    rfconductor = models.IntegerField()
    rfcliente = models.IntegerField()
    placa_camion = models.CharField(max_length=20)
    placa_remolcador = models.CharField(max_length=20)
    placa_remolque = models.CharField(max_length=20)
    tipo_carga = models.CharField(max_length=50)
    comentario = models.CharField(max_length=300)
    rfestado = models.IntegerField()
    rfuser_cre = models.IntegerField()
    fecha_cre = models.DateField()
    rfuser_eli = models.IntegerField()
    fecha_eli = models.DateField()

    class Meta:
        managed = False
        db_table = 'ttrabajosm_det'


class Usuarios(models.Model):
    ced = models.AutoField(primary_key=True)
    estado = models.CharField(max_length=255)
    nom = models.CharField(max_length=255)
    usu = models.CharField(unique=True, max_length=255)
    con = models.CharField(max_length=255)
    tipo = models.CharField(max_length=255)
    ciudad = models.CharField(max_length=250)
    despacho = models.IntegerField()
    seguimiento = models.IntegerField()
    confirma_guia = models.IntegerField()
    email = models.CharField(max_length=100, db_collation='utf8_unicode_ci')
    forgot_pass_identity = models.CharField(max_length=32, db_collation='utf8_unicode_ci', blank=True, null=True)
    created = models.DateTimeField()
    modified = models.DateTimeField()
    status = models.CharField(max_length=1, db_collation='utf8_unicode_ci')
    phone = models.CharField(max_length=15, db_collation='utf8_unicode_ci')
    balotario = models.IntegerField()
    maestro = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'usuarios'


class UsuariosEncuestas(models.Model):
    id_usuario = models.CharField(max_length=15)
    id_encuesta = models.IntegerField()
    id_intentos = models.IntegerField()
    id_viaje = models.IntegerField()
    fecha_eval = models.DateTimeField()
    fecha_eval_ult = models.DateTimeField()
    calificacion = models.IntegerField()
    puntaje = models.IntegerField()
    token_eval = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'usuarios_encuestas'


class UsuariosEncuestas1(models.Model):
    id_usuario = models.CharField(max_length=15, db_collation='utf8_general_ci')
    id_encuesta = models.IntegerField()
    id_intentos = models.IntegerField()
    id_viaje = models.IntegerField()
    fecha_eval = models.DateTimeField()
    fecha_eval_ult = models.DateTimeField()
    calificacion = models.IntegerField()
    puntaje = models.IntegerField()
    token_eval = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'usuarios_encuestas1'


class Vehiculos(models.Model):
    nombre = models.CharField(unique=True, max_length=100)
    tipo_unidad = models.CharField(max_length=50)
    perfil = models.CharField(max_length=50, db_collation='utf8_spanish_ci')
    gal_tanque1 = models.IntegerField()
    gal_tanque2 = models.IntegerField()
    gal_total = models.IntegerField()
    estado = models.IntegerField()
    rfuser_cre = models.IntegerField()
    date_added = models.DateField()
    configuracion = models.CharField(max_length=5)
    mtc = models.CharField(max_length=20)

    class Meta:
        managed = False
        db_table = 'vehiculos'


class Viajes(models.Model):
    fecha = models.DateField()
    estado = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'viajes'
